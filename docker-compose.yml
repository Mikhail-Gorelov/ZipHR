version: '3.7'

services:
  web:
    build:
      context: .
      dockerfile: docker/dev/web/Dockerfile
    volumes:
      - ./web/:/usr/src/web/
      - postgres_socket:/postgres_socket
    ports:
      - "8008:8000"
    env_file:
      - docker/dev/env/.env
      - docker/dev/env/.db.env
      - docker/dev/env/.data.env
    depends_on:
      - db
    restart: always
    networks:
      - separated_network
    extra_hosts:
      - "DOCKER-GATEWAY-HOST:172.17.0.1"  # Linux OS get access from docker container to localhost
      # host.docker.internal - For docker in Windows. No other action is required.
      # If You need to connect to PostgreSql in localhost, just use host.docker.internal instead of localhost
    healthcheck:
      test: curl --fail -s http://localhost:8000$$HEALTH_CHECK_URL || exit 1
      interval: 1m30s
      timeout: 3s
      retries: 3
  db:
    build:
      context: .
      dockerfile: docker/dev/db/Dockerfile
    hostname: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - postgres_socket:/postgres_socket
    ports:
      - "5432:5432"
    env_file:
      - docker/dev/env/.db.env
    networks:
      - separated_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 50s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
  postgres_socket:

networks:
  separated_network:
    driver: bridge
